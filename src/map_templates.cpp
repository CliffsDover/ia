#include "map_templates.hpp"

#include "init.hpp"
#include "game_time.hpp"

#include <vector>

namespace map_templ_handling
{

namespace
{

Map_templ templates_[size_t(Map_templ_id::END)];

Map_templ_cell ch_to_cell(const char ch,
                          const std::vector<Map_templ_cell>& prototypes)
{
    for (const Map_templ_cell& proto : prototypes)
    {
        if (proto.ch == ch)
        {
            return proto;
        }
    }

    TRACE << "Failed to make map template cell from char: " <<  ch << std::endl;
    ASSERT(false);
    return Map_templ_cell(0);
}

void mk_templ(const std::string& str,
              const Map_templ_id id,
              const std::vector<Map_templ_cell>& prototypes)
{
    Map_templ& templ = templates_[size_t(id)];

    std::vector<Map_templ_cell> inner;

    for (const auto ch : str)
    {
        switch (ch)
        {
        case ';':
        {
            //Delimiting character (";") found, inner vector is pushed to outer
            templ.add_row(inner);
            inner.clear();
        }
        break;

        case ' ':
        {
            inner.push_back(Map_templ_cell(0));
        }
        break;

        default:
        {
            Map_templ_cell templ_cell = ch_to_cell(ch, prototypes);

            inner.push_back(templ_cell);
        }
        break;
        }
    }
}

void init_templs()
{
    //Blank level with correct dimensions to copy/paste when making new templates
//  "################################################################################;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "#..............................................................................#;"
//  "################################################################################;";

    //Filled version
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;"
//  "################################################################################;";

    //----------------------------------------------------------------- FOREST
    std::string str =
        "tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt;"
        "tttttttttttttttttt,,,,,,,,,,tttttttt~~~~~~~~tttttttttt,,,tt,t,,t,,ttt,,ttttttttt;"
        "tttt,=,,,,ttttttt,,,,,t,,,,tttt~,~,~~~,,,~~~~,,~~ttttttt,,,,,,________,,,ttttttt;"
        "ttt,,,@,,,,,tttttt,,,,,,,,,,,,,,~,~~~,,t,,~,~~,,,,,,,,,,,,,,___________,,,,,,ttt;"
        "ttt,,,,=,,,,,tttttttt,,,,,,,,,,,,~~,~~,,,~~,~,,,,,,,,,,,,,_____######____,,ttttt;"
        "tt,,,,,,=,,,,tttttttttttt,,,,,,,,,~,~~,~~~,~,,,,,______________#....#_____,,,,tt;"
        "tt,,,,,,,=,t,tt,ttt,tttt,,,,,,,,,,,,,,,,,,,,,,,,_____________###....###____,,,tt;"
        "tttt,t,,,,=,,,,,,,,,t,,,,,,,,,,,,,,,,,,,,,,,,,,,__#####_#__#_#.#....#.#______,,t;"
        "tttttttt,,,========,,,,t,t,,,,,,,,,,,,,,,,,,t,,,__#...########.#....#.######_,tt;"
        "ttttttttt,,,,,,,,,,===,,tt,,,,,,,,,,,,,,,t,,,,,,__#...#...................##_,,t;"
        "ttttt,,ttttt,tt,tt,,,,=,,tt,,,,,,,,,tt,,,,,,&,&___#.#.#..[.[.[.[...[.[....>#_,tt;"
        "tt,,,,,,,,tttttttttt,,,=,,t,,tttt,,t,,,,,,,=======+...+*****************-..#_,tt;"
        "tttt,,,,,,,,,t,,,tttt,,&=,,,,,,ttt,ttt,,,,=,t,,___#.#.#..[.[.[.[...[.[.....#_,,t;"
        "ttttt,,,,,t,,,,,,,,,,,,,,=&,,,ttttttt,,,,=&,t,,,__#...#...................##_,tt;"
        "ttttt,,,,,,,t,,t,,,,,t,,,,=&,,,,tttttt,&=,,t,t,,__#...########.#....#.######_,tt;"
        "tttttt,,,t,,,,,,,,,,,,t,,,,=,t,ttt,tt,,=,,,tt,,,__#####_#__#_#,#....#.#_____,,,t;"
        "tttttt,,,,,,,,,tttt,,,,,,,,,===========,,,,ttt,,_____________###....###____,,ttt;"
        "tttttt,,,t,,,tttttt,,,,ttt,ttt,,t,t,,ttt,,,,t,,,,______________#....#_____,,,ttt;"
        "ttttttt,,,,,,,ttt,,,,,,,,tttt,,,,tt,t,,,,,,,,,,,,,,,,,,,,______######____,,,tttt;"
        "ttttttt,ttt,tttt,,,,,,,,,,,tttt,,,,tt,,,,tt,,t,,,,,,,,,,,,,,___________,,,t,,,tt;"
        "ttttttttttttttttt,,,t,,,ttttttttt,,,,,,,,,ttttt,,,,ttt,,t,,,,,,,,,,,,,,,tttttttt;"
        "tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt;";

    mk_templ(str, Map_templ_id::intro_forest, std::vector<Map_templ_cell>
    {
        {'@', Feature_id::floor},           //Start pos + stone path
        {'.', Feature_id::floor},           //Stone floor with some grass/shrubs
        {'#', Feature_id::wall},            //Stone wall with some low/high rubble
        {',', Feature_id::grass},           //Random grass and bushes
        {'&', Feature_id::grass},           //Graves, or random grass and bushes
        {'_', Feature_id::grass},           //Withered grass
        {'=', Feature_id::floor},           //Stone path
        {'~', Feature_id::liquid_shallow},  //Shallow water
        {'t', Feature_id::tree},
        {'v', Feature_id::brazier},
        {'[', Feature_id::church_bench},
        {'-', Feature_id::altar},
        {'*', Feature_id::carpet},
        {'>', Feature_id::stairs},
        {'+', Feature_id::floor}            //Doors
    });

    //----------------------------------------------------------------- EGYPT
    str =
        "################################################################################;"
        "###...################################........................##################;"
        "###.1.###############################..######################..#################;"
        "###...##############################..#########################.################;"
        "####.##############################..####v....################|....|############;"
        "####.#############################..####..###v..##############......############;"
        "####.##########################.....####..######.v############|....|############;"
        "#####.####.#.#.#.#.###########..######v..#######..###############.##############;"
        "######.##|C........|#########.#######..##########..############..###############;"
        "#######.#...........##.....##.#####...############v.##########..################;"
        "########....M...C....#.#.#.#..####..###...#########..########..#################;"
        "#########..P.....C.#..........####.####.@...........v#######..##################;"
        "########....M...C....#.#.#.#..##|..|###...#################.v###################;"
        "#######.#...........##.....##.##....######################...###################;"
        "######.##|C........|#########.##|..|########......#######.v##.##################;"
        "#####.####.#.#.#.#.##########.####.########..###v..#####..####.#################;"
        "####.########################.####...#####..#####v..###..######.################;"
        "####.########################..#####..###..#######v.....########.###############;"
        "###...########################...####.....#############.#########.###|...|######;"
        "###.2.##########################...##################v..##########........######;"
        "###...############################v....................##############|...|######;"
        "################################################################################;";

    mk_templ(str, Map_templ_id::egypt, std::vector<Map_templ_cell>
    {
        {'@', Feature_id::floor},
        {'.', Feature_id::floor},
        {'#', Feature_id::wall},
        {'v', Feature_id::brazier},
        {'|', Feature_id::pillar},
        {'S', Feature_id::statue},
        {'P', Feature_id::floor, Actor_id::khephren},
        {'M', Feature_id::floor, Actor_id::mummy},
        {'C', Feature_id::floor, Actor_id::croc_head_mummy},
        {'1', Feature_id::floor},   //Stair candidate #1
        {'2', Feature_id::floor}    //Stair candidate #2
    });

    //----------------------------------------------------------------- LENG
    str =
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##################################;"
        "%%%%%%%%%%-%%--%--%%--%%%--%%--%%-%-%%%--%-%%-#.....#.....#.....#..............#;"
        "%@----%--------%---%---%--------%----%-----%--#.....#.....#.....#..............#;"
        "%%--------------------------------------------###.#####.#####.###..............#;"
        "%-------------%--------------------------%----#.................#..............#;"
        "%%------------%-------------------------------#...###.#####.###................#;"
        "%%---------------------%%%--------------%-----#...#.....#.....##################;"
        "%%%----%%---------------S%--------------------#...#.....#.....##################;"
        "%%%------------------%%-S%S------%------------#...################............##;"
        "%%%%-----------------%--%%-%----%%------------#......#...#......##.....$......##;"
        "%%%--------------------%%S--------------------##.###.#...#......###.$.....$...##;"
        "%%------------------%-%%S---------------------+......#...######...1.........E.##;"
        "%%%-------------------S%%S-%------------------##.###.#...#......###.$.....$...##;"
        "%%-------------------%-S%%-%----%-------------#...#..###.#.#######.....$......##;"
        "%%---------------------S%%S-------------------#...#......#......##............##;"
        "%%%------------------%-%%---------------%-----#.###############.#############2##;"
        "%%-----%---------------------------%----------#.#...............#############.##;"
        "%%%---------%---------------------------------#.#.###.###.###.#.####....#####..#;"
        "%%--%-----------------------------------------#.#.###.###.###.#.##...##...####.#;"
        "%%%--------------%----------------%---%-----%-#.#.###.###.###.#.#..######....#.#;"
        "%%%%%%--%---%--%%%-%--%%%%%%%-%-%%%--%%--%-%%%#...............#...##########...#;"
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##################################;";

    mk_templ(str, Map_templ_id::leng, std::vector<Map_templ_cell>
    {
        {'@', Feature_id::floor},
        {'%', Feature_id::wall},
        {'.', Feature_id::floor},
        {'#', Feature_id::wall},
        {'E', Feature_id::floor, Actor_id::leng_elder},
        {'1', Feature_id::floor},
        {'2', Feature_id::wall},
        {'$', Feature_id::altar},
        {'-', Feature_id::grass},
        {'+', Feature_id::floor}, //Door
        {'S', Feature_id::grass, Actor_id::leng_spider}
    });

    //----------------------------------------------------------------- RATS IN THE WALLS
    str =
        "################################################################################;"
        "##@#################,##,##xxxxxxxxx###xxxxxxxxxxx######rr#,##########,#,########;"
        "##.##############,,,,,,,,,x,,,,,,,xrrrxrr,rrr,rrxr,rrrr,,,,,,##,,#,,,,,,,#######;"
        "##...&##########,,,,xxxxxxx,,,,,,,xr,rxr,,,,,,,rxrrr,,,,,:,,,,,,,,,,,:,,,,######;"
        "###..:#########,,:,,x,,,,,,,,,,,,,,,,rrrrxx,xxrrxr,r,,,,,,,,,,,,,,,,,,,,,,,,,###;"
        "###:...#######,,,,,,xx,xxxx,,,,,,,xrrrxrrx,,,xrrxrrr,,,,,,,,:,,,,,,:,,,,,,######;"
        "##&..:..#####,,,,,,,,,,,,,xxxx,xxxx,r,xxxx,,,x,xx,,,,,,,,,,,,,,,,,,,,,,,,,######;"
        "####.&.:####,,,,,,,,,,,,,,,:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,:,,,,,####;"
        "####..##&:1.,,,,,,,,,:,,,,,,,,,,:,,,,,,,,,,,|,,,:,,,xxx,xx,xxx,,,,,,,,,,,,,#####;"
        "#####..&:.#,,,,,,,,,,,,,,,x,x,x,x,x,x,,,,|,,,,,|,,,rx,,,,,,,,x,,,,:,,,,,,,######;"
        "###########,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,x,rrrrr,,x,,,,,,,,,,,#######;"
        "###########,,,,,,,,|,,,,,,,,,,,,,,,,:,,,|,,,,,,,|,,rr,,,,,r,,,,,,,#,,,,,########;"
        "###########,,,,,|,,,,,|,,,,,,,,,,,,,,,,,,,,,,,,,,,,,x,r,rr,,,x,,####,,,,,#######;"
        "###########,,,,,,,,,,,,,,,x,x,x,x,x,x,,,,|,,,,,|,,,rx,,rrr,,,x,,,,##############;"
        "############,,,|,,,,,,,|,,,,,,,,,,,,,,,,,,,,|,,,,,x,x,r,,r,,,x,,,###############;"
        "############,,,,,,,,,,,,,,,,,,,,:,,,,,,,,,,,,,,,,,rr,,,rr,,,,x,:##xxxxxx########;"
        "#############,,,|,,,,,|,,,xxx,xxxxx,xxx,,,:,,,,r,,,rx,rr,,,,,x,,,,x....x########;"
        "##############,,,,,|,,,,,,x,,,,,xrrrrrx,,,,,,,,,,,r,x,r,,,,,rx,,,,...>.x########;"
        "#################,,,,,,:,,x,,,,,xrr,,rxrr,rr,rr,r,,,xxxxxxxxxx,:,,x....x########;"
        "################:,,,,,,,,,x,,,,,xrrrrrxrrrr##rrr,r,,rr,rr,rr,r,##:xxxxxx########;"
        "###################:,,####xxxxxxxxxxxxx##r#####rr###r###r#rrr###################;"
        "################################################################################;";

    mk_templ(str, Map_templ_id::rats_in_the_walls, std::vector<Map_templ_cell>
    {
        {'@', Feature_id::floor},
        {'.', Feature_id::floor},
        {'#', Feature_id::wall},
        {'x', Feature_id::wall},                    //Constructed walls
        {'&', Feature_id::bones},
        {'1', Feature_id::floor},                   //Discovery event
        {',', Feature_id::floor},                   //Random bones
        {'r', Feature_id::floor, Actor_id::rat},    //Random bones + rat
        {'>', Feature_id::stairs},
        {'|', Feature_id::monolith},
        {':', Feature_id::stalagmite}
    });

    //----------------------------------------------------------------- BOSS LEVEL
    str =
        "################################################################################;"
        "############################...................................................#;"
        "############################...................................................#;"
        "############################...#.....#...#.....#...#.....#...#.....#...........#;"
        "############################...###.###...###.###...###.###...###.###...........#;"
        "##############....#########......###.......###.......###.......###.............#;"
        "##############....#########....###.###...###.###...###.###...###.###...........#;"
        "############.#....#.#######....#.....#...#.....#...#.....#...#.....#...........#;"
        "#...########.#....#.#######.................................................####;"
        "#...#...................#.#.......|....|....|....|....|....|....#...#...#...####;"
        "#.#.#.............................................................v...v...v..###;"
        "#@..............................................................#.....M......###;"
        "#.#.#.............................................................v...v...v..###;"
        "#...#...................#.#.......|....|....|....|....|....|....#...#...#...####;"
        "#...########.#....#.#######.................................................####;"
        "############.#....#.#######....#.....#...#.....#...#.....#...#.....#...........#;"
        "##############....#########....###.###...###.###...###.###...###.###...........#;"
        "##############....#########......###.......###.......###.......###.............#;"
        "############################...###.###...###.###...###.###...###.###...........#;"
        "############################...#.....#...#.....#...##...##...#.....#...........#;"
        "############################...................................................#;"
        "################################################################################;";

    mk_templ(str, Map_templ_id::boss_level, std::vector<Map_templ_cell>
    {
        {'@', Feature_id::floor},
        {'.', Feature_id::floor},
        {'#', Feature_id::wall},
        {'M', Feature_id::floor, Actor_id::the_high_priest},
        {'|', Feature_id::pillar},
        {'v', Feature_id::brazier},
        {'>', Feature_id::stairs}
    });

    //----------------------------------------------------------------- BOSS LEVEL
    str =
        "################################################################################;"
        "#####################################...|...####################################;"
        "#####################################.|...|.####################################;"
        "#####################################...|...####################################;"
        "####################################..|...|..###################################;"
        "###################################.....|.....##################################;"
        "##################################....|...|....#################################;"
        "#################################...#.......#...################################;"
        "#######.......................##..#.#.##.##.#.#..##.......######################;"
        "#######.|.|.|.|.|.|.|.|.|.|.|.#v..|.v.|...|.v.|..v#.|.|.|.######################;"
        "#######..@..............................o.................######################;"
        "#######.|.|.|.|.|.|.|.|.|.|.|.#v..|.v.|...|.v.|..v#.|.|.|.######################;"
        "#######.......................##..#.#.##.##.#.#..##.......######################;"
        "#################################...#.......#...################################;"
        "##################################....|...|....#################################;"
        "###################################.....|.....##################################;"
        "####################################..|...|..###################################;"
        "#####################################...|...####################################;"
        "#####################################.|...|.####################################;"
        "#####################################...|...####################################;"
        "################################################################################;"
        "################################################################################;";

    mk_templ(str, Map_templ_id::trapez_level, std::vector<Map_templ_cell>
    {
        {'@', Feature_id::floor},
        {'.', Feature_id::floor},
        {'#', Feature_id::wall},
        {'|', Feature_id::pillar},
        {'v', Feature_id::brazier},
        {'o', Feature_id::floor, Actor_id::END, Item_id::trapez}
    });
}

} //namespace

void init()
{
    init_templs();
}

const Map_templ& templ(const Map_templ_id id)
{
    ASSERT(id != Map_templ_id::END);
    return templates_[int(id)];
}

} //map_templ_handling
